plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.miics'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.mapstruct:mapstruct:1.6.0.Beta1'
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'org.mapstruct:mapstruct-processor:1.6.0.Beta1'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0.Beta1'
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

}

compileJava {
    options.compilerArgs << '-Amapstruct.defaultComponentModel=spring'
    options.annotationProcessorPath = configurations.annotationProcessor
}
//tasks.named('test') {
//    useJUnitPlatform()
//}
